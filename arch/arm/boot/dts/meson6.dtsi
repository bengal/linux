/*
 * Copyright 2014 Carlo Caione <carlo@caione.org>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 */

#include "meson.dtsi"

/ {
	model = "Amlogic Meson6 SoC";
	compatible = "amlogic,meson6", "amlogic,8726_mx";

	interrupt-parent = <&gic>;

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a9";
			reg = <0x200>;
		};

		cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a9";
			reg = <0x1>;
		};
	};

	clocks {
		#address-cells = <1>;

		clk81: clk@0 {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <141666666>;
		};
	};

	ethmac: ethernet@c9410000 {
		compatible = "snps,dwmac";
		reg = <0xc9410000 0x10000>;
		interrupts = <0 8 1>;
		interrupt-names = "macirq";
		clocks = <&clk81>;
		clock-names = "stmmaceth";
		status = "okay";
		pinctrl-0 = <&eth_pins>;
		pinctrl-names = "default";
	};

	pinctrl: pinctrl@c1109880 {
		compatible = "amlogic,meson8-pinctrl";
		reg = <0xc1109880 0x10>;
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		gpio: banks@c11080b0 {
			reg = <0xc11080b0 0x28>,
			      <0xc11080e4 0x18>,
			      <0xc1108120 0x18>,
			      <0xc1108030 0x30>;
			reg-names = "mux", "pull-enable", "pull", "gpio";
			gpio-controller;
			#gpio-cells = <2>;
               };

		gpio_ao: ao-bank@c1108030 {
			reg = <0xc8100014 0x4>,
			      <0xc810002c 0x4>,
			      <0xc8100024 0x8>;
			reg-names = "mux", "pull", "gpio";
			gpio-controller;
			#gpio-cells = <2>;
		};

		eth_pins: eth_pins {
			eth_pins{
				pins = "eth_mdio", "eth_mdc", "eth_tx_clk_50m",
				       "eth_tx_en", "eth_txd1", "eth_txd0",
				       "eth_rx_clk_in", "eth_rx_dv", "eth_rxd1",
				       "eth_rxd0";
				function = "ethernet";
			};
		};

		nand {
			nand {
				pins = "nand_io", "nand_io_ce0", "nand_io_ce1",
				       "nand_io_rb0", "nand_ale", "nand_cle",
				       "nand_wen_clk", "nand_ren_clk", "nand_dqs",
				       "nand_ce2", "nand_ce3";
				function = "nand";
			};
		};

		uart_ao_a: uart_ao_a {
			uart_ao_a {
				pins = "uart_tx_ao_a", "uart_rx_ao_a";
				/*        "uart_cts_ao_a", "uart_rts_ao_a"; */
				function = "uart_ao";
			};
		};

		i2c_mst_ao: i2c_mst_ao {
			i2c_mst_ao {
				pins = "i2c_mst_sck_ao", "i2c_mst_sda_ao";
				function = "i2c_mst_ao";
				bias-pull-up;
			};
		};
	};

}; /* end of / */
